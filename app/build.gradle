plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.aliakseipalianski.myapplication"
        minSdk 22
        targetSdk 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        stage {
            resValue("string", "appBuildTypeText", "MyApp-by")
            signingConfig signingConfigs.debug
            debuggable true
        }

        debug {
            resValue("string", "appBuildTypeText", "MyApp-by")
        }

    }

    flavorDimensions "paid", "country"

    productFlavors {
        base {
            applicationId = "com.it.acacdemy.base"
            dimension = "paid"
            buildConfigField "String", "AD_ID", "\"0000-KEY-DEBUG\""
        }

        extened {
            applicationId = "com.it.acacdemy.premium"
            dimension = "paid"
            buildConfigField "String", "AD_ID", "\"\""
        }

        ru {
            dimension = "country"
            manifestPlaceholders = [scheme: "ru"]
        }

        by {
            dimension = "country"
            manifestPlaceholders = [scheme: "by"]
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    variantFilter { variant ->
        //def names = variant.flavors*.name
        if (variant.buildType.name == "release" || variant.buildType.name == "stage") {
            setIgnore(true)
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation project(":core")
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.activity:activity-ktx:1.3.1'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    debugImplementation 'androidx.fragment:fragment-testing:1.4.0-alpha09'
     //broke instrumentation test debugImplementation 'androidx.fragment:fragment-testing:1.3.6'
    testImplementation 'androidx.test:core-ktx:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'androidx.test.ext:truth:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation "org.robolectric:robolectric:4.5.1"
    testImplementation "io.mockk:mockk:1.12.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha01'
    //
    testImplementation 'org.mockito:mockito-core:3.12.4'
    //
 /*   androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.0-alpha01'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha01'*/
}